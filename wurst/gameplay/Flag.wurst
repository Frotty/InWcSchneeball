package Flag
import Entity
import PlayerData

public Flag redflag
public Flag greenflag

enum State
	CARRIED
	DROPPED
	INBASE

public class Flag extends Entity
	State state
	unit actor
	unit carrier
	boolean redTeam
	vec2 base
	
	trigger inRangeTrig
	
	construct ( vec3 pos, unit actor )
		super(pos, actor.getOwner(), 32.)
		this.actor = actor
		state = State.INBASE
		base = vec2(pos.x, pos.y)
		actor.setUserData(this castTo int).addAbility(HEIGHT_ENABLER).removeAbility(HEIGHT_ENABLER)
		
		inRangeTrig = CreateTrigger()
		inRangeTrig.registerUnitInRangeSource( actor, 100. )
		inRangeTrig.addAction(function Flag.onInRange )
		
	override function update()
		if state == State.CARRIED
			pos.x = carrier.getX()
			pos.y = carrier.getY()
			actor.setXY(pos.x,pos.y)
		else
			pos.x = actor.getX()
			pos.y = actor.getY()
		super.update()
		
	function setCarrier(unit u, boolean display)
		carrier = u
		state = State.CARRIED
		debugPrint("carried", 1)
		if display
		//Display to opponent team players
			if carrier.getOwner().getId() > 5
				if GetLocalPlayer().getId() <= 5
					StartSound( gg_snd_CreepAggroWhat1 )
			else
				if GetLocalPlayer().getId() > 5
					StartSound( gg_snd_CreepAggroWhat1 )
	
	function returnFlag()
		debugPrint("returning", 1)
		actor.setXY(base.x,base.y)
		state = State.INBASE
		if actor.getOwner().getId() > 5
			if GetLocalPlayer().getId() <= 5
				StartSound( gg_snd_CreepAggroWhat1 )
		else
			if GetLocalPlayer().getId() > 5
				StartSound( gg_snd_CreepAggroWhat1 )
	
	function drop()
		debugPrint("dropped", 1)
		carrier = null
		state = State.DROPPED
			
	static function onInRange()
		debugPrint("inrange", 1)
		unit u = GetTriggerUnit()
		player p = u.getOwner()
		var flag = GetTriggeringTrigger().getSource().getUserData() castTo Flag
		if flag.state == State.INBASE
			if (not flag.redTeam and p.getId()  < 5)
				flag.setCarrier(u, true)
			else if (flag.redTeam and p.getId()  > 5)
				flag.setCarrier(u, true)
		if flag.state == State.DROPPED
			if p.getId() <5
				if flag.redTeam
					flag.returnFlag()
				else
					flag.setCarrier(u, false)
			else 
				if not flag.redTeam
					flag.returnFlag()
				else
					flag.setCarrier(u, false)
					
function checkCarrierDeath()
	unit u = GetTriggerUnit()
	if (u == redflag.carrier or u == greenflag.carrier)
		debugPrint("a carrier died", 1)
		redflag.drop()

init
	trigger t = CreateTrigger()
	t.registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)
	t.addAction(function checkCarrierDeath)