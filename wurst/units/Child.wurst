package Child
import initlater Snowball
import initlater Snowman
import Snowbomb
import Rollingball
import KillStreaks
import Iceshard
import ItemHandling
import TimedBar
import PhysicsEntity
import IceWall
import ClosureTimers
import Assets
import Collision
import ChannelAbilityPreset
import Tiles
import PlayerData

public constant humChildren = new LinkedList<Child>()
public constant orcChildren = new LinkedList<Child>()

public constant LEFT_SPAWN = vec2(-2400, 4100)
public constant RIGHT_SPAWN = vec2(2020, 4100)

public constant JUMP_ID = compiletime(ABIL_ID_GEN.next())

public constant HUMAN_CHILD_ID = compiletime(HERO_ID_GEN.next())
public constant ORC_CHILD_ID = compiletime(HERO_ID_GEN.next())

public function getEnemyChildren(player owner) returns LinkedList<Child>
	if owner.getId() > 4
		return humChildren
	return orcChildren

public class Child extends UnitEntity
	use PhysicsModule

	var fixPos = false
	TimedBar wrapBar
	SnowmanDummy snowman = null
	var sliding = false
	var slidespeed = 0.
	var slidevec = ZERO2
	var hasPresent = false

	construct(vec3 pos, player owner, int id)
		super(createUnit(owner, id, pos, 0 .fromDeg()), pos, 54.)
		sleeps = false
		if owner.getId() > 4
			orcChildren.add(this)
		else
			humChildren.add(this)
		restitution = .25
		surfaceFriction = 0.80
		actor.addAbility(JUMP_ID)
		EventListener.add(actor, EVENT_PLAYER_UNIT_SPELL_EFFECT, () -> onCast())
		EventListener.add(actor, EVENT_PLAYER_UNIT_DEATH, () -> onDeath())
		addSpawnShield()
		registerCollidable(this, (e) -> skip)
		actor..selectSkill(SNOWBALL_SPELL_ID)..setSkillPoints(2)


	function onCast()
		var id = GetSpellAbilityId()
		var target = getSpellTargetPos().withTerrainZ()
		let castPos = getPos().add(0,0,48)
		let angle = pos.angleTo2d(target)
		let lvl = actor.getAbilityLevel(GetSpellAbilityId())

		if castPos.distanceTo(target) < 128
			target = castPos + angle.toVec(128)

		switch id
			case SNOWBALL_SPELL_ID
				new Snowball(castPos, owner, angle, target, lvl)
			case SNOWBOMB_SPELL_ID
				new Snowbomb(castPos, owner, target, lvl)
			case ROLLINGBALL_SPELL_ID
				new Rollingball(pos.polarProject(16, angle, (90).asAngleDegrees()).add(0,0,16), owner, angle)
			case SNOWMAN_SPELL_ID
				new SnowmanMissile(castPos, owner, target.toVec2(), lvl)
			case ICEWALL_SPELL_ID
				print("icewall")
				new IceMissile(castPos, owner, target)
			case ICESHARD_SPELL_ID
				new Iceshard(castPos, owner, angle )
			case JUMP_ID
				if not flying and not actor.hasItemById('I002')
					actor.setAnimation("walk")
					addVel(angle.toVec(6.75).withZ(7.))
					flashEffect(Abilities.tornado_Target, pos)

	function onDeath()
		var p = GetKillingUnit().getOwner()
		var p2 = GetDyingUnit().getOwner()
		if wrapBar != null
			wrapBar.terminate()
		adjustKills(p, p2)
		removeallspell(actor)
		flashEffect(Objects.humanBloodPeasant, pos)

		doAfter(5.5) ->
			if pData[owner.getId()] != null
				if owner.getId() > 4
					actor.revive(RIGHT_SPAWN, false)
					setPos(RIGHT_SPAWN.withTerrainZ() + vec3(64. * owner.getId() - 5, 0, 530.))
				else
					actor.revive(LEFT_SPAWN, false)
					setPos(LEFT_SPAWN.withTerrainZ() + vec3(64. * owner.getId(), 0, 530.))

				addSpawnShield()
				setVel(vec3(0,0,0))
				actor..setVertexColor(255,255,255,255)
				..setPropWindow(60 .fromDeg())
				owner..clearSelection()
				..panCamToTimed(actor, 1.)
				..select(actor)

	override function update()
		physicsUpdate(this)
		if getPos().toVec2().getTile().getType() == Tiles.northrend_Ice
			slidespeed = slidespeed.lerp(1.75, 0.025)
		else
			slidespeed = slidespeed.lerp(0., 0.125)
		actor.setMoveSpeed(275 * (1 - (slidespeed / 2)))
		let newvec = actor.getFacingAngle().toVec(hasPresent ? slidespeed * 0.2 : slidespeed)
		addVel((slidevec + newvec * 0.5).toVec3())
		slidevec = newvec

		super.update()

		if not gg_rct_arenabounds.contains(pos.toVec2())
			pos = vec3(0,3600,200)
			vel = vec3(0,0,0)
			actor.setPos(pos.toVec2())


	override function onEscapeGround()
		actor.setPropWindow(0 .fromDeg())

	override function onGroundHit()
		actor.setPropWindow(60 .fromDeg())

	function addSpawnShield()
		actor.addAbility(AbilityIds.invulnerable)
		let eff = actor.addEffect(Abilities.divineShieldTarget, "origin")
		doAfter(5.) ->
			actor.removeAbility(AbilityIds.invulnerable)
			eff.destr()

	ondestroy
		removeCollidable(this)


@compiletime function genJump()
	new ChannelAbilityPreset(JUMP_ID, 1, true)
	..presetDisableOtherAbilities(lvl -> true)
	..presetTooltipNormal(lvl -> "[|cffFFCC00W|r] |cff7BB5F7Jump")
	..presetTooltipNormalExtended(lvl -> "Jumps into the target direction. Allows you to jump down, but not up, cliffs.")
	..setCooldown(1, 2.)
	..setManaCost(1, 0)
	..presetCastRange(lvl -> 9999.)
	..presetHotkey("W")
	..presetTargetTypes(Targettype.POINT)
	..presetButtonPosNormal(1, 2)
	..presetIcon(Icons.bTNBootsOfSpeed)

@compiletime function create_w3u_H007()
	new HeroDefinition(ORC_CHILD_ID, 'nvlk')
	..setName("Orc Child")
	..setRace(Race.Orc)
	..setSpeedBase(275)
	..setNormalAbilities(commaList(SNOWBALL_SPELL_ID, 'AInv'))
	..setHeroAbilities(commaList(SNOWBOMB_SPELL_ID, SNOWMAN_SPELL_ID, ROLLINGBALL_SPELL_ID, ICESHARD_SPELL_ID, ICEWALL_SPELL_ID))
	..setHitPointsMaximumBase(150)
	..setCanFlee(false)
	..setManaMaximum(20)
	..setManaRegeneration(0.6)
	..setManaInitialAmount(8)
	..setModelFile("war3mapImported\\OrcChild_v3.mdl")
	..setScalingValue(1.4)
	..setProperNames("Snagakop,Nazork,Urtynob,Morzod,Shakbad,Ogsog,Snikgrod")
	..setProperNamesUsed(7)
	..setCollisionSize(0.0)
	..setStrengthPerLevel(1)
	..setAgilityPerLevel(1)
	..setIntelligencePerLevel(1)

@compiletime function create_w3u_H001()
	new HeroDefinition(HUMAN_CHILD_ID, 'nvlk')
	..setName("Human Child")
	..setRace(Race.Human)
	..setNormalAbilities(commaList(SNOWBALL_SPELL_ID, 'AInv'))
	..setHeroAbilities(commaList(SNOWBOMB_SPELL_ID, SNOWMAN_SPELL_ID, ROLLINGBALL_SPELL_ID, ICESHARD_SPELL_ID, ICEWALL_SPELL_ID))
	..setSpeedBase(275)
	..setHitPointsMaximumBase(150)
	..setCanFlee(false)
	..setManaMaximum(20)
	..setManaRegeneration(0.6)
	..setManaInitialAmount(8)
	..setScalingValue(1.4)
	..setProperNames("Dennis,Joachim,Garret,Jens,Philip,Peter,Florian")
	..setProperNamesUsed(7)
	..setCollisionSize(0.0)
	..setStrengthPerLevel(1)
	..setAgilityPerLevel(1)
	..setIntelligencePerLevel(1)
