package GameInit
import Child
import EntityManagement
import Gamemode
import PlayerData
import PresentUnwrap
import ClosureTimers
import Collision

function startGame()
	for p in allPlayers
		p.p.addGold(50)
		if p.id > 4
			p.child = new Child(RIGHT_SPAWN.withTerrainZ() + vec3(48. * p.id, 0, 200.), p.p, ORC_CHILD_ID)
		else
			p.child = new Child(LEFT_SPAWN.withTerrainZ() + vec3(48. * p.id, 0, 200), p.p, HUMAN_CHILD_ID)

	if allPlayers.size() == 1
		allPlayers.peek().child.actor.setLevel(10, false)
		new Child(vec3(LEFT_SPAWN.x + 48 * 6, LEFT_SPAWN.y, 400.), players[8], ORC_CHILD_ID)
		new Child(vec3(LEFT_SPAWN.x + 48 * 8, LEFT_SPAWN.y, 400.), players[9], ORC_CHILD_ID)
		new Child(vec3(LEFT_SPAWN.x + 48 * 10, LEFT_SPAWN.y, 400.), players[10], ORC_CHILD_ID)
		players[0].addGold(9999)
		var x = -5200.
		for i = 8 to 100
			x += 16 + (i * 2)
			addEffect("war3mapImported\\sphere.mdx", vec3(x, -1200., 400.))..setScale(i * 0.075)..setAlpha(125)..setColor(255, 0, 0)
			addEffect("war3mapImported\\sphere.mdx", vec3(x - ((i)), -1200., 400.))..setScale(0.4)..setColor(0, 255, 0)
			addEffect("war3mapImported\\sphere.mdx", vec3(x + ((i)), -1200., 400.))..setScale(0.4)..setColor(0, 255, 0)

	SetTimeOfDay(12.)
	doAfter(.5, () -> createDialog())
	doAfter(ANIMATION_PERIOD * 10.5) ->
		CreateTimer().startPeriodic(ANIMATION_PERIOD * 2., () -> globalWorld.update(ANIMATION_PERIOD))

	doPeriodically(2.) cb ->
		for pd in allPlayers
			pd.p.addGold(1)
			if seconds % 4 == 0
				pd.child.actor.addXp(2, true)

	initPresentCircles()
	initPowerupCircles()
	startEntityLoop()

init
	doAfter(0.1, () -> startGame())
