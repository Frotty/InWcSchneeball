package PhysicsModule
import Entity
import TerrainUtils
import PhysicsConstants

// Base Entity Class
public module PhysicsModule
	// Affected by gravity
	boolean affectedByGravity = true
	
	// Physical factors
	
	// The higher the more slide. Should be < 1.
	real friction = 0.9
	// Defines the bounciness
	real restitution = 0.6
	
	boolean flying = false

	function onGroundHit()
		
	function onEscapeGround()
			
	function physicsUpdate(Entity e)
		e.terrainZ = getTerrainZ(e.pos.toVec2())
		if e.pos.z <= e.terrainZ + .2
			if flying
				flying = false
				onGroundHit()
			onGround(e)
		else
			flying = true
			inAir(e)

	// When the Entity is on or near the ground	
	function onGround(Entity e)
		// If the Entity is moving towards 
		vec3 normal = getTerrainNormal(e.pos.x, e.pos.y, 8.)
		// Is the Entity going away from the ground?
		if e.vel.dot(normal) > 0 or normal.lengthSquared() == 0
			return

		vec3 pv = e.vel.project(normal)
		pv *= (-1. - restitution)
		if pv.lengthSquared() > friction
			e.vel += pv
		else	
			e.vel *= friction
			
		e.pos.z = e.terrainZ
		onGround()
		
	function inAir(Entity e)
		if affectedByGravity
			e.vel += gravity
			
	function onGround()