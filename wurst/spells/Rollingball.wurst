package Rollingball
import Projectile
import Fx
import initlater Child
import SoundUtils
import Collision
import ClosureTimers
import Assets
import AbilityTooltipGenerator

public constant ROLLINGBALL_SPELL_ID = compiletime(ABIL_ID_GEN.next())

constant STARTMOMENTUM = 2.
constant MOMENTUMMAX = 25.
constant SIZEGAIN = .075
constant MAXSIZE = 24.5

constant startRoll = new SoundDefinition("Abilities\\Spells\\Orc\\EarthQuake\\EarthquakeRock.wav", false, false)
constant hitTarget = new SoundDefinition("Abilities\\Spells\\Human\\FlakCannons\\FlakCannon.wav", false, false)

public class Rollingball extends Projectile
	real momentum
	real size = 2.
	real startz

	construct(vec3 pos, player owner, angle angle)
		super(pos, 32., owner, angle, "war3mapImported\\rollingball.mdx")
		startz = pos.z + 16
		setSpeed(STARTMOMENTUM)
		momentum = STARTMOMENTUM
		startRoll.play()
		registerCollidable(this, (other) -> onHit(other))
		registerCollider(this, SHAPE_SPHERE, (other) -> onHit(other))

	override function update()
		if momentum < MOMENTUMMAX
			momentum = momentum.lerp(MOMENTUMMAX, 0.005)
			setSpeed(momentum)
		if this.size < MAXSIZE
			this.size += SIZEGAIN
			fx.setScale(this.size)
			radius = 32 + this.size * 24
			radius2 = radius * radius
			pos.z = startz + radius - 48.
		fx.getDummy().setTimeScale(momentum/MOMENTUMMAX * 0.5)

		super.update()
		let terrainZ = pos.getTerrainZ()
		if terrainZ > startz
			terminate()


	function onHit(Entity e)
		if e instanceof Child and e.owner.isEnemyOf(owner)
			var c = e castTo Child
			flashEffect(Abilities.frostDamage, pos)
			fx.getDummy().damageTarget(c.actor, this.size * 2.5)
		else if e instanceof Projectile
			doAfter(0.01) ->
				e.terminate()

	ondestroy
		flashEffect("war3mapImported\\rollingExplosion.mdx", pos)
		hitTarget.play()
		removeCollidable(this)
		removeCollider(this)

@compiletime function getObjs()
	let tgen = new AbilityTooltipGenerator("Rolling ball that gains size and momentum.")
	new ChannelAbilityPreset(ROLLINGBALL_SPELL_ID, 4, true, tgen)
	..presetButtonPosNormal(2, 1)
	..presetTargetTypes(Targettype.POINT)
	..tooltipStartListen()
	..presetHotkey("D")
	..setName("Rolling ball")
	..presetIcon("BTNSnowBall")
	..presetCooldown(lvl -> 24. - lvl)
	..presetManaCost(lvl -> 8 - (lvl / 3).toInt())
	..presetCastRange(lvl -> 400.)

	..tooltipStopListen()
