package Rollingball
import Projectile
import Fx
import initlater Child
import SoundUtils
import Collision
import ClosureTimers

constant real STARTMOMENTUM = 2
constant real MOMENTUMMAX = 24
constant real SIZEGAIN = .075
constant real MAXSIZE = 25.5

constant startRoll = new SoundDefinition("Abilities\\Spells\\Orc\\EarthQuake\\EarthquakeRock.wav", false, false)
constant hitTarget = new SoundDefinition("Abilities\\Spells\\Human\\FlakCannons\\FlakCannon.wav", false, false)

public class Rollingball extends Projectile
	real momentum
	real size = 2
	real startz

	construct(vec3 pos, player owner, angle angle)
		super(pos, 32., owner, angle, "war3mapImported\\rollingball.mdx")
		startz = pos.z + 16
		setSpeed(STARTMOMENTUM)
		momentum = STARTMOMENTUM
		startRoll.play()
		registerCollidable(this, (other) -> onHit(other))
		registerCollider(this, SHAPE_SPHERE, (other) -> onHit(other))

	override function update()
		if momentum < MOMENTUMMAX
			momentum = momentum.lerp(MOMENTUMMAX, 0.005)
			setSpeed(momentum)
		if this.size < MAXSIZE
			this.size += SIZEGAIN
			fx.setScale(this.size)
			radius = this.size * 32
			print("radius: " + radius.toString())
			radius2 = radius * radius
			pos.z = startz + radius - 16.
		let tz1 = pos.polarProject(radius -2., xyAngle + (90).fromDeg(), angle(0)).toVec2().getTerrainZ()
		let tz2 = pos.polarProject(radius -2., xyAngle + (-90).fromDeg(), angle(0)).toVec2().getTerrainZ()
		fx.getDummy().setTimeScale(momentum/MOMENTUMMAX * 0.5)

		super.update()
		let terrainZ = pos.getTerrainZ()
		if pos.z < terrainZ or pos.z < tz1 or pos.z < tz2
			terminate()
		else if terrainZ < startz
			startz = terrainZ


	function onHit(Entity e)
		if e instanceof Child and e.owner.isEnemyOf(owner)
			var c = e castTo Child
			fx.getDummy().damageTarget(c.actor, this.size * 17.5)
		else if e instanceof Projectile
			doAfter(0.01) ->
				e.terminate()

	ondestroy
		AddSpecialEffect("war3mapImported\\rollingExplosion.mdx", pos.x, pos.y)
		hitTarget.play()
		removeCollidable(this)
		removeCollider(this)

