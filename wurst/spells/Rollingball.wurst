package Rollingball
import Projectile
import Fx
import initlater Child
import TerrainUtils
import SoundUtils

constant real STARTMOMENTUM = 1
constant real MOMENTUMMAX = 20
constant real SIZEGAIN = .075
constant real MAXSIZE = 24.5

public class Rollingball extends Projectile
	real momentum
	real size = 2
	real startz

	construct(vec3 pos, player owner, angle angle)
		super(pos, 32., owner, angle, "war3mapImported\\rollingball.mdx")
		startz = pos.z + 16
		setSpeed(STARTMOMENTUM)
		momentum = STARTMOMENTUM
		startRoll.play()
		
	override function update()
		super.update()
		if momentum < MOMENTUMMAX
			momentum = momentum.lerp(MOMENTUMMAX, 0.005)
			setSpeed(momentum)
		if this.size < MAXSIZE
			this.size += SIZEGAIN
			fx.setScale(this.size)
			radius = this.size*8
			pos.z = startz+radius-16.
		let tz1 = getTerrainZ(pos.polarProject(radius -2., xyAngle + (90.).asAngleRadians(), angle(0)).toVec2())
		let tz2 = getTerrainZ(pos.polarProject(radius -2., xyAngle + (-90.).asAngleRadians(), angle(0)).toVec2())
		fx.getDummy().setTimeScale(momentum/MOMENTUMMAX)
		if radius > 128
			if pos.z < terrainZ or pos.z < tz1 or pos.z < tz2
				terminate()
			else if terrainZ < startz
				startz = terrainZ
			
		Entity e = Entity.first
		while e != null
			if e != this and owner != e.owner and IsPlayerEnemy( e.owner, owner )
				if pos.distanceToSq(e.pos) < (e.radius+radius).squared()
					onHit(e)
					
			e = e.next
			
			
	function onHit(Entity e)
		if e instanceof Child
			var c = e castTo Child
			terminate()
			fx.getDummy().damageTarget(c.actor, this.size*8)
		else if e instanceof Projectile
			e.terminate()
	
	ondestroy
		AddSpecialEffect("war3mapImported\\rollingExplosion.mdx", pos.x, pos.y)
		hitTarget.play()
		
SoundDefinition startRoll
SoundDefinition hitTarget

init
	startRoll = new SoundDefinition("Abilities\\Spells\\Orc\\EarthQuake\\EarthquakeRock.wav", 2972, false)
	hitTarget = new SoundDefinition("Abilities\\Spells\\Human\\FlakCannons\\FlakCannon.wav", 1419, false)
	

				
