package Rollingball
import Projectile
import Fx
import initlater Child
import SoundUtils

constant real STARTMOMENTUM = 2
constant real MOMENTUMMAX = 20
constant real SIZEGAIN = .075
constant real MAXSIZE = 25.5

constant startRoll = new SoundDefinition("Abilities\\Spells\\Orc\\EarthQuake\\EarthquakeRock.wav", false, false)
constant hitTarget = new SoundDefinition("Abilities\\Spells\\Human\\FlakCannons\\FlakCannon.wav", false, false)

public class Rollingball extends Projectile
	real momentum
	real size = 2
	real startz

	construct(vec3 pos, player owner, angle angle)
		super(pos, 32., owner, angle, "war3mapImported\\rollingball.mdx")
		startz = pos.z + 16
		setSpeed(STARTMOMENTUM)
		momentum = STARTMOMENTUM
		startRoll.play()
		
	override function update()
		if momentum < MOMENTUMMAX
			momentum = momentum.lerp(MOMENTUMMAX, 0.005)
			setSpeed(momentum)
		if this.size < MAXSIZE
			this.size += SIZEGAIN
			fx.setScale(this.size)
			radius = this.size*8
			pos.z = startz+radius-16.
		let tz1 = pos.polarProject(radius -2., xyAngle + (90).fromDeg(), angle(0)).toVec2().getTerrainZ()
		let tz2 = pos.polarProject(radius -2., xyAngle + (-90).fromDeg(), angle(0)).toVec2().getTerrainZ()
		fx.getDummy().setTimeScale(momentum/MOMENTUMMAX * 0.5)
		if radius > 128

		super.update()
		// 	if pos.z < terrainZ or pos.z < tz1 or pos.z < tz2
		// 		terminate()
		// 	else if terrainZ < startz
		// 		startz = terrainZ
			
		// Entity e = Entity.first
		// while e != null
		// 	if e != this and owner != e.owner and IsPlayerEnemy( e.owner, owner )
		// 		if pos.distanceToSq(e.pos) < (e.radius+radius).squared()
		// 			onHit(e)
					
		// 	e = e.next
			
			
	function onHit(Entity e)
		if e instanceof Child
			var c = e castTo Child
			terminate()
			fx.getDummy().damageTarget(c.actor, this.size*15.)
		else if e instanceof Projectile
			e.terminate()
	
	ondestroy
		AddSpecialEffect("war3mapImported\\rollingExplosion.mdx", pos.x, pos.y)
		hitTarget.play()
		
