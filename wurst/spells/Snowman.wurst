package Snowman
import Projectile
import Fx
import Child
import Sound
import SoundQueue

constant real SPEED = 10
constant real MELT = 192

public class Snowman extends Projectile
	boolean impacted = false
	real meltingtime
	unit target

	construct(vec3 pos, player owner, real angle)
		super(pos, owner, 32.)
		fx = new Fx(pos, angle, "Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
		setTimed(4.)
		xyangle = angle
		setXYSpeed(SPEED)
		throwSound.playOnPoint(pos)
		meltingtime = MELT
		
	override function update()
		super.update()
		if impacted
			pos.x = target.getX()
			pos.y = target.getY()
			debugPrint(meltingtime.toString(),1)
			meltingtime --
			fx.dummy.damageTarget(target, .1).setVertexColor(255,255,255,meltingtime.toInt()+48).setFacing(target.getFacing())
			if meltingtime < 0
				boolean canrelease = true
				Entity e = Entity.first
				while e != null
					if e instanceof Snowman and e != this
						var m = e castTo Snowman
						if m.target == this.target
							canrelease = false
					e = e.next
				if canrelease
					SetUnitPropWindow(target,60)
				terminate()
		else
			if pos.z < terrainZ
				terminate()
					
			Entity e = Entity.first
			while e != null
				if e != this and owner != e.owner and IsPlayerEnemy( e.owner, owner )
					if pos.distToVecSquared(e.pos) < (e.radius+radius).squared()
						debugPrint("inRange",1)
						onHit(e)
						debugPrint("hit",1)
						
				e = e.next
			
			
	function onHit(Entity e)
		if e instanceof Child
			var c = e castTo Child
			target = c.actor
			debugPrint("impacted",1)
			impacted = true
			SetUnitPropWindow(target,0)
			fx.setFx("Doodads\\Icecrown\\Props\\SnowMan\\SnowMan.mdl").dummy.setFacing(target.getFacing()).setFlyHeight(0,0)
			setXYSpeed(0)
		else if e instanceof Projectile
			e.terminate()
			
	ondestroy
		fx.hiddenDestroy()
	
Sound throwSound

	
init
	throwSound = new Sound("Abilities\\Spells\\Other\\FrostBolt\\FrostBoltLaunch1.wav", 1100, false, true, true, 10, 10, "CombatSoundsEAX")
		
