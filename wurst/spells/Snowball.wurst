package Snowball
import Projectile
import Fx
import Child
import SoundUtils
import Assets
import Collision
import AbilityTooltipGenerator

public constant SNOWBALL_SPELL_ID = compiletime(ABIL_ID_GEN.next())

constant SPEED = 19.5
constant RealLevelClosure RANGE = lvl -> 900. + lvl * 100

public constant throwSound = new SoundDefinition("Abilities\\Spells\\Other\\FrostBolt\\FrostBoltLaunch1.wav", false, false)
public constant terrainHitSound = new SoundDefinition("Abilities\\Spells\\Other\\FrostBolt\\FrostBoltHit1.wav", false, false)
public constant childHitSound = new SoundDefinition("Abilities\\Spells\\Other\\FrostArrows\\FrostArrowHit1.wav", false, false)


public class Snowball extends PhysicsProjectile
	var lvl = 1

	construct(vec3 pos, player owner, angle xyAngle, vec3 target, int lvl)
		super(pos, 30., owner, xyAngle, "war3mapImported\\snowball.mdx")
		this.lvl = lvl
		let tdif = (pos.getTerrainZ() - target.z).abs() * 0.0075
		gravity *= tdif
		setTimed(2.5)
		setFriction(0.905)
		restitution = 0.05
		if (pos.getTerrainZ() - target.z).abs() > 24.
			gravity *= 1.45
			setTarget(target.toVec2().withTerrainZ(24.), SPEED)
		else
			findTarget(target.toVec2().withTerrainZ(), xyAngle)
		throwSound.playOnPoint(pos)
		registerCollidable(this, (other) -> onHit(other))
		registerCollider(this, SHAPE_SPHERE, (other) -> onHit(other))

	function findTarget(vec3 target, angle xyAngle)
		let maxdist = RANGE.run(lvl)
		let dist = pos.distanceTo(target)
		var tdist = 0.

		while dist + tdist < maxdist
			tdist += 32.
			let diff = (target.toVec2().polarOffset(xyAngle, tdist).getTerrainZ() - target.z).abs()
			if diff > 14.
				tdist -= 32.
				break

		gravity *= 0.5
		setTarget(target.toVec2().polarOffset(xyAngle, tdist).withTerrainZ(16.), SPEED)


	function onHit(Entity e)
		if e.owner.isEnemyOf(owner)
			if e instanceof Child
				if (e castTo Child).actor.isAlive()
					let child = e castTo Child
					fx.getDummy().damageTarget(child.actor, 55., ATTACK_TYPE_NORMAL)
					flashEffect(Abilities.frostArmorDamage, pos)
					flashEffect(Objects.bloodElfSpellThiefBlood, e.getPos())
					childHitSound.playOnPoint(pos)
					terminate()
			else
				flashEffect(Abilities.zigguratFrostMissile, pos)
				terminate()

	override function onGroundHit()
		for child in getEnemyChildren(owner)
			if child != null and not child.done and (child.getPos()  + vec3(0, 0, radius / 2)).distanceToSq(getPos() + vec3(0, 0, radius / 2)) < radius2 + child.radius2
				onHit(child)
		if not done
			flashEffect(Abilities.zigguratFrostMissile, pos)
			terminate()

	ondestroy
		removeCollidable(this)
		removeCollider(this)

@compiletime function getObjs()
	let tgen = new AbilityTooltipGenerator("An ordinary snowball.")
	new ChannelAbilityPreset(SNOWBALL_SPELL_ID, 4, true, tgen)
	..setHeroAbility(false)
	..presetButtonPosNormal(0, 2)
	..presetTargetTypes(Targettype.POINT)
	..tooltipStartListen()
	..presetHotkey("Q")
	..setName("Snowball")
	..presetIcon("BTNFrostBolt")
	..presetCooldown(lvl -> 1.75 - (lvl / 4))
	..presetManaCost(lvl -> 4 - (lvl / 3).toInt())
	..presetCastRange(RANGE)
	..setLevelSkipRequirement(0)
	..tooltipStopListen()

