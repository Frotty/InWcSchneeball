package PresentUnwrap
import Colors
import Texttag
import Gamemode
import GameConstants
import CustomBar
import Entity
import TimedBar
import Child
import ItemObject

constant int PRESENT_ID = 'I002'
constant int UNWRAP_ID = 'A007'
constant int CIRCLE_ID = 'ncop'
int array PRESENTS

public function checkUnwrap(unit u)
	for int i = 0 to 5
		var uit = UnitItemInSlot(u, i)
		if GetItemTypeId(uit) == PRESENT_ID
			RemoveItem(uit)
			u.addItem(PRESENTS[GetRandomInt(0,4)])
			break

function isChild() returns boolean
	if GetUnitTypeId(GetFilterUnit()) == 'H001' or GetUnitTypeId(GetFilterUnit()) == 'H007'
		return true
	return false

function sellPresent()
	let u = GetTriggerUnit()
	let p = GetOwningPlayer(u)
	for int i = 0 to 5
		var uit = UnitItemInSlot(u, i)
		if GetItemTypeId(uit) == PRESENT_ID
			(uit.getUserData() castTo ItemObject).terminate()
			p.addGold(100)
			createTTEx(vec3(u.getX(),u.getY(),20.), vec2(0,0.05), "|cffffcc00+100|r", 10,  2., colorA(255,255,255,0), p )
			DisplayTimedTextToForce(GetPlayersAll(), 12., p.getNameColored() + "|r has returned a Present gaining |cffFFCC00+3|r Points for his team!")	
			if p.getId() <= 5
				redscore += 3
			else
				greenscore += 3
			checkEnd()


function startBar()
	var u = GetSpellAbilityUnit()
	var id = GetSpellAbilityId()
	if id == UNWRAP_ID
		(u.getUserData() castTo Child).wrapBar = new TimedBar(vec3(u.getX()-120.,u.getY(),-16), "|", 120, 0, 7.5, colorA(255,255,255,255), colorA(230,181,16,255), u )


trigger t
unit scircle
unit ncircle
public function initPresentCircles()
	scircle = CreateUnit(Player(15),CIRCLE_ID, -256, 1350,0.)
	ncircle = CreateUnit(Player(15),CIRCLE_ID, 0, 6540,0.)
	t = CreateTrigger()
	t.registerUnitInRange(scircle, 100,Condition(function isChild))
	t.addAction(function sellPresent)
	t = CreateTrigger()
	t.registerUnitInRange(ncircle, 100,Condition(function isChild))
	t.addAction(function sellPresent)
	
init
	t = CreateTrigger()
	t.registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_CHANNEL)
	t.addAction(function startBar)
	PRESENTS[0] = 'I000'
	PRESENTS[1] = 'I001'
	PRESENTS[2] = 'I00B'
	PRESENTS[3] = 'I00C'
	PRESENTS[4] = 'I00D'