package HomingMissile
	import Fx
	
		
	function spellCondition() returns boolean
		if GetSpellAbilityId() == 'A001'
			return true
		else
			return false
	
	
	function spellStart()
		new HomingMissle(GetTriggerUnit(), GetSpellTargetUnit())
		
	public class HomingMissle
		
		timer t
		unit u
		unit ut
		real x
		real y
		real x2
		real y2
		real push
		real pushFaktor
		real i
		real angle
		Fx fx
		
		
		
		construct(unit u, unit ut)
			this.u=u
			this.ut=ut

			angle = angleBetweenCoordsD(u.getX(), u.getY(), ut.getX(), ut.getY())

			push = 1			//Speed f√ºr den Vektor
			pushFaktor = 0.05	//Verringert den Vektor
			
			i = 60/0.03
			x = u.getX()
			y = u.getY()
			x2 = 0
			y2 = 0
			
			fx = new Fx(u.getX(),u.getY(),angle,"Abilities\\Weapons\\IllidanMissile\\IllidanMissile.mdl")
			fx.setOwner(GetOwningPlayer(u))
			fx.setZ(50)
			
			t = getTimer()
			t.setData(this castTo int)
			t.startPeriodic(0.03, function blackHCall) 
			
		static function blackHCall()
			GetExpiredTimer().getData() castTo HomingMissle.theSpell()
		
		function theSpell()
			i--
			
			angle = angleBetweenCoordsD(fx.getX(), fx.getY(), ut.getX(), ut.getY())
			
			x = polarProjectionXD(fx.getX(), push, angle)
			y = polarProjectionYD(fx.getY(), push, angle)
			
			x = x - fx.getX() // why not polarProjectionXD(0., push, angle) ?
			y = y - fx.getY()
			
			x2 = x2 + x
			y2 = y2 + y
			
			x = fx.getX() + x2
			y = fx.getY() + y2
			
			fx.setPos(x,y)
			
			x2 = x2 - (x2*pushFaktor)
			y2 = y2 - (y2*pushFaktor)
			
			if i <= 0
				t.release()
				fx.hiddenDestroy()
				





endpackage
